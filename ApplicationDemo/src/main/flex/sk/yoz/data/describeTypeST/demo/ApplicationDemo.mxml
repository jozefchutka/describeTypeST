<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
               xmlns:s="library://ns.adobe.com/flex/spark" 
               xmlns:mx="library://ns.adobe.com/flex/mx"
               applicationComplete="init()" xmlns:sparkTree="com.sparkTree.*" xmlns:demo="sk.yoz.data.describeTypeST.demo.*">
    <fx:Script>
        <![CDATA[
            import mx.collections.ArrayCollection;
            import mx.controls.Button;
            
            import sk.yoz.data.describeTypeST.Descriptor;
            import sk.yoz.data.describeTypeST.demo.valueObjects.VO1;
            import sk.yoz.data.describeTypeST.demo.valueObjects.VO2;
            import sk.yoz.data.describeTypeST.elements.AbstractType;
            
            import spark.components.List;
            
            private var typeDescriptor:Descriptor = new Descriptor;
            
            [Bindable]
            private var dataProvider:ArrayCollection = new ArrayCollection;
            
            [Bindable]
            private var dataProviderTree1:*;
            
            [Bindable]
            private var dataProviderTree2:*;
            
            [Bindable]
            private var dataProviderTree3:*;
            
            private function init():void
            {
                fillDataProvider();
            }
            
            private function fillDataProvider():void
            {
                var items:Array = [this, List, Application, Button, DisplayObject,
                    Descriptor, Object, Class, Number, 123, "hello world", {a:true}, 
                    VO1, new VO1, VO2, new VO2("hi")];
                
                for each(var item:* in items)
                    dataProvider.addItem({label:item is Class ? getQualifiedClassName(item) : item, data:item});
                    
                dropDownList.selectedIndex = 0;
                update();
            }
            
            private function describe(value:Object):AbstractType
            {
                var d0:Date = new Date;
                var result:AbstractType = typeDescriptor.describe(value);
                var d1:Date = new Date;
                var bytes:ByteArray = new ByteArray;
                bytes.writeObject(result);
                log("describeTypeSL(): " + (d1.time - d0.time) + " ms, size: " + bytes.length + " bytes");
                return result;
            }
            
            private function treeProxy(data:*):*
            {
                var d0:Date = new Date;
                var result:* = new DataProxy(data);
                var d1:Date = new Date;
                log("TreeProxy: " + (d1.time - d0.time) + " ms");
                return result;
            }
            
            private function log(value:String):void
            {
                textArea.appendText(value + "\n");
            }
            
            private function update():void
            {
                var selectedItem:Object = dropDownList.selectedItem;
                var label:String = selectedItem.label;
                var data: * = selectedItem.data;
                log("--- " + label + " ------------------------");
                var type:AbstractType = describe(data);
                dataProviderTree1 = describeType(data);
                dataProviderTree2 = treeProxy(data);
                dataProviderTree3 = treeProxy(type);
                log("");
            }
        ]]>
    </fx:Script>
    <s:layout>
        <s:VerticalLayout/>
    </s:layout>
    <s:HGroup width="100%">
        <s:DropDownList id="dropDownList" width="100%" dataProvider="{dataProvider}"
                        change="update()"/>
    </s:HGroup>
    <mx:HDividedBox width="100%" height="100%">
        <s:TextArea id="textArea" width="100%" height="100%" />
        <s:VGroup width="100%" height="100%">
            <s:TabBar dataProvider="{viewStack}"/>
            <mx:ViewStack id="viewStack" width="100%" height="100%">
                <s:NavigatorContent label="describeType()" width="100%" height="100%">
                    <s:TextArea width="100%" height="100%" text="{dataProviderTree1}"/>
                </s:NavigatorContent>
                
                <s:NavigatorContent label="describeTypeST()" width="100%" height="100%">
                    <mx:Tree width="100%" height="100%" dataProvider="{dataProviderTree2}" 
                             dataDescriptor="{new DataProxyDescriptor}"/>
                </s:NavigatorContent>
                
                <s:NavigatorContent label="describeTypeST(describeTypeST())" width="100%" height="100%">
                    <mx:Tree width="100%" height="100%" dataProvider="{dataProviderTree3}"
                             dataDescriptor="{new DataProxyDescriptor}"/>
                </s:NavigatorContent>
            </mx:ViewStack>
        </s:VGroup>
    </mx:HDividedBox>
    
</s:Application>